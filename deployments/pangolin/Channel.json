{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "config",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "endpoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "channel",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fromChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "toChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encoded",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct Message",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "MessageAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "dispatchResult",
          "type": "bool"
        }
      ],
      "name": "MessageDispatched",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONFIG",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ENDPOINT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOCAL_CHAINID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "dones",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "imtBranch",
      "outputs": [
        {
          "internalType": "bytes32[32]",
          "name": "",
          "type": "bytes32[32]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "channel",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fromChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "toChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encoded",
              "type": "bytes"
            }
          ],
          "internalType": "struct Message",
          "name": "message",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "recvMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "root",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "toChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "encoded",
          "type": "bytes"
        }
      ],
      "name": "sendMessage",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "address": "0xbe855598E9b227Fb2fA955DBC857257C1a7c4F45",
  "args": [
    "0x6D710B16dedD20F04CA7E77d28A14056D567493F",
    "0x5E3A80652683E9c7fb79cAb9E782f019cC003BB4"
  ],
  "bytecode": "0x60e06040523060c0523480156200001557600080fd5b5060405162001a0338038062001a03833981016040819052620000389162000091565b7f27ae5ba08d7291c96c8cbddcc148bf48a6d68c7974b94356f53754ef6171d7576000556001600160a01b0391821660a05216608052620000c9565b80516001600160a01b03811681146200008c57600080fd5b919050565b60008060408385031215620000a557600080fd5b620000b08362000074565b9150620000c06020840162000074565b90509250929050565b60805160a05160c0516118f66200010d6000396000610794015260008181610153015261020601526000818160d9015281816105ad015261068801526118f66000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80639d2ec12911610076578063d92e82e41161005b578063d92e82e41461014e578063ebf0c71714610175578063f67c907c1461017e57600080fd5b80639d2ec12914610135578063b0ff5e721461014857600080fd5b80633dbcc8d1146100a857806352720be4146100bf5780636fad06f5146100d45780639622d8d114610120575b600080fd5b6021545b6040519081526020015b60405180910390f35b6100c76101b1565b6040516100b69190611007565b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b6565b61013361012e366004611086565b6101ed565b005b6100ac610143366004611133565b61066e565b466100ac565b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b6100ac60005481565b6101a161018c3660046111a6565b60226020526000908152604090205460ff1681565b60405190151581526020016100b6565b6101b9610fe8565b604080516104008101918290529060019060209082845b8154815260200190600101908083116101d0575050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016634134224961023b60c0880160a089016111bf565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024016040805180830381865afa1580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c7919061123b565b805190915073ffffffffffffffffffffffffffffffffffffffff16331461034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f216175746800000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600061036261035d87611345565b6108c8565b9050816020015173ffffffffffffffffffffffffffffffffffffffff1663094f87c587604001358388886040518563ffffffff1660e01b81526004016103ab9493929190611425565b602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec919061144f565b610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f6f6600000000000000000000000000000000000000000000000000006044820152606401610346565b608086013546146104bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f21746f436861696e4964000000000000000000000000000000000000000000006044820152606401610346565b60008181526022602052604090205460ff161561053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103469060208082526004908201527f646f6e6500000000000000000000000000000000000000000000000000000000604082015260600190565b60008181526022602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f7c41faba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637c41faba906105e4908a9088906004016114d5565b6020604051808303816000875af1158015610603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610627919061144f565b9050817f62b1dc20fd6f1518626da5b6f9897e8cd4ebadbad071bb66dc96a37c970087a88260405161065d911515815260200190565b60405180910390a250505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461070f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f21656e64706f696e7400000000000000000000000000000000000000000000006044820152606401610346565b468503610778576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2163726f73732d636861696e00000000000000000000000000000000000000006044820152606401610346565b600061078360215490565b905060006040518060e001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016107db4690565b81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525092935091506108659050826108c8565b90506108726001826108f8565b61087c6001610a3c565b600081905560405182917fa047cf3271a6e55d76e7706ca90d011a4f2f641f7c46dfd31f6abe4cd94db53f916108b491908690611663565b60405180910390a298975050505050505050565b6000816040516020016108db9190611684565b604051602081830303815290604052805190602001209050919050565b6001610906602060026117e6565b61091091906117f2565b82602001541061097c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6d65726b6c6520747265652066756c6c000000000000000000000000000000006044820152606401610346565b60018260200160008282546109919190611805565b9091555050602082015460005b6020811015610a2e57816001166001036109cd57828482602081106109c5576109c5611818565b015550505050565b8381602081106109df576109df611818565b01546040805160208101929092528101849052606001604051602081830303815290604052805190602001209250600282610a1a9190611847565b915080610a2681611882565b91505061099e565b50610a376118ba565b505050565b6000610a4f82610a4a610a55565b610f16565b92915050565b610a5d610fe8565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015610fe057600182821c166000868360208110610f4357610f43611818565b0154905081600103610f80576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450610fcb565b84868460208110610f9357610f93611818565b6020020151604051602001610fb2929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080610fd890611882565b915050610f20565b505092915050565b6040518061040001604052806020906020820280368337509192915050565b6104008101818360005b60208082106110205750611034565b825184529283019290910190600101611011565b50505092915050565b60008083601f84011261104f57600080fd5b50813567ffffffffffffffff81111561106757600080fd5b60208301915083602082850101111561107f57600080fd5b9250929050565b6000806000806060858703121561109c57600080fd5b843567ffffffffffffffff808211156110b457600080fd5b9086019060e082890312156110c857600080fd5b909450602086013590808211156110de57600080fd5b506110eb8782880161103d565b9598909750949560400135949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461112057600080fd5b50565b803561112e816110fe565b919050565b60008060008060006080868803121561114b57600080fd5b8535611156816110fe565b945060208601359350604086013561116d816110fe565b9250606086013567ffffffffffffffff81111561118957600080fd5b6111958882890161103d565b969995985093965092949392505050565b6000602082840312156111b857600080fd5b5035919050565b6000602082840312156111d157600080fd5b81356111dc816110fe565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611235576112356111e3565b60405290565b60006040828403121561124d57600080fd5b6040516040810181811067ffffffffffffffff82111715611270576112706111e3565b604052825161127e816110fe565b8152602083015161128e816110fe565b60208201529392505050565b600082601f8301126112ab57600080fd5b813567ffffffffffffffff808211156112c6576112c66111e3565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561130c5761130c6111e3565b8160405283815286602085880101111561132557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060e0823603121561135757600080fd5b61135f611212565b61136883611123565b8152602083013560208201526040830135604082015261138a60608401611123565b6060820152608083013560808201526113a560a08401611123565b60a082015260c083013567ffffffffffffffff8111156113c457600080fd5b6113d03682860161129a565b60c08301525092915050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b8481528360208201526060604082015260006114456060830184866113dc565b9695505050505050565b60006020828403121561146157600080fd5b815180151581146111dc57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126114a657600080fd5b830160208101925035905067ffffffffffffffff8111156114c657600080fd5b80360382131561107f57600080fd5b60408152600083356114e6816110fe565b73ffffffffffffffffffffffffffffffffffffffff8082166040850152602086013560608501526040860135608085015260608601359150611527826110fe565b80821660a08501525050608084013560c083015261154760a08501611123565b73ffffffffffffffffffffffffffffffffffffffff1660e083015261156f60c0850185611471565b60e0610100850152611586610120850182846113dc565b925050508260208301529392505050565b600073ffffffffffffffffffffffffffffffffffffffff8083511684526020808401518186015260408401516040860152816060850151166060860152608084015160808601528160a08501511660a086015260c0840151915060e060c086015281518060e087015260005b818110156116205783810183015187820161010001528201611603565b5061010092506000838288010152827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116870101935050505092915050565b82815260406020820152600061167c6040830184611597565b949350505050565b6020815260006111dc6020830184611597565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b8085111561171f57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561170557611705611697565b8085161561171257918102915b93841c93908002906116cb565b509250929050565b60008261173657506001610a4f565b8161174357506000610a4f565b816001811461175957600281146117635761177f565b6001915050610a4f565b60ff84111561177457611774611697565b50506001821b610a4f565b5060208310610133831016604e8410600b84101617156117a2575081810a610a4f565b6117ac83836116c6565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156117de576117de611697565b029392505050565b60006111dc8383611727565b81810381811115610a4f57610a4f611697565b80820180821115610a4f57610a4f611697565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008261187d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118b3576118b3611697565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea164736f6c6343000811000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c80639d2ec12911610076578063d92e82e41161005b578063d92e82e41461014e578063ebf0c71714610175578063f67c907c1461017e57600080fd5b80639d2ec12914610135578063b0ff5e721461014857600080fd5b80633dbcc8d1146100a857806352720be4146100bf5780636fad06f5146100d45780639622d8d114610120575b600080fd5b6021545b6040519081526020015b60405180910390f35b6100c76101b1565b6040516100b69190611007565b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b6565b61013361012e366004611086565b6101ed565b005b6100ac610143366004611133565b61066e565b466100ac565b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b6100ac60005481565b6101a161018c3660046111a6565b60226020526000908152604090205460ff1681565b60405190151581526020016100b6565b6101b9610fe8565b604080516104008101918290529060019060209082845b8154815260200190600101908083116101d0575050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016634134224961023b60c0880160a089016111bf565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024016040805180830381865afa1580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c7919061123b565b805190915073ffffffffffffffffffffffffffffffffffffffff16331461034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f216175746800000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600061036261035d87611345565b6108c8565b9050816020015173ffffffffffffffffffffffffffffffffffffffff1663094f87c587604001358388886040518563ffffffff1660e01b81526004016103ab9493929190611425565b602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec919061144f565b610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f6f6600000000000000000000000000000000000000000000000000006044820152606401610346565b608086013546146104bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f21746f436861696e4964000000000000000000000000000000000000000000006044820152606401610346565b60008181526022602052604090205460ff161561053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103469060208082526004908201527f646f6e6500000000000000000000000000000000000000000000000000000000604082015260600190565b60008181526022602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f7c41faba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637c41faba906105e4908a9088906004016114d5565b6020604051808303816000875af1158015610603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610627919061144f565b9050817f62b1dc20fd6f1518626da5b6f9897e8cd4ebadbad071bb66dc96a37c970087a88260405161065d911515815260200190565b60405180910390a250505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461070f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f21656e64706f696e7400000000000000000000000000000000000000000000006044820152606401610346565b468503610778576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2163726f73732d636861696e00000000000000000000000000000000000000006044820152606401610346565b600061078360215490565b905060006040518060e001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016107db4690565b81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525092935091506108659050826108c8565b90506108726001826108f8565b61087c6001610a3c565b600081905560405182917fa047cf3271a6e55d76e7706ca90d011a4f2f641f7c46dfd31f6abe4cd94db53f916108b491908690611663565b60405180910390a298975050505050505050565b6000816040516020016108db9190611684565b604051602081830303815290604052805190602001209050919050565b6001610906602060026117e6565b61091091906117f2565b82602001541061097c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6d65726b6c6520747265652066756c6c000000000000000000000000000000006044820152606401610346565b60018260200160008282546109919190611805565b9091555050602082015460005b6020811015610a2e57816001166001036109cd57828482602081106109c5576109c5611818565b015550505050565b8381602081106109df576109df611818565b01546040805160208101929092528101849052606001604051602081830303815290604052805190602001209250600282610a1a9190611847565b915080610a2681611882565b91505061099e565b50610a376118ba565b505050565b6000610a4f82610a4a610a55565b610f16565b92915050565b610a5d610fe8565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015610fe057600182821c166000868360208110610f4357610f43611818565b0154905081600103610f80576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450610fcb565b84868460208110610f9357610f93611818565b6020020151604051602001610fb2929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080610fd890611882565b915050610f20565b505092915050565b6040518061040001604052806020906020820280368337509192915050565b6104008101818360005b60208082106110205750611034565b825184529283019290910190600101611011565b50505092915050565b60008083601f84011261104f57600080fd5b50813567ffffffffffffffff81111561106757600080fd5b60208301915083602082850101111561107f57600080fd5b9250929050565b6000806000806060858703121561109c57600080fd5b843567ffffffffffffffff808211156110b457600080fd5b9086019060e082890312156110c857600080fd5b909450602086013590808211156110de57600080fd5b506110eb8782880161103d565b9598909750949560400135949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461112057600080fd5b50565b803561112e816110fe565b919050565b60008060008060006080868803121561114b57600080fd5b8535611156816110fe565b945060208601359350604086013561116d816110fe565b9250606086013567ffffffffffffffff81111561118957600080fd5b6111958882890161103d565b969995985093965092949392505050565b6000602082840312156111b857600080fd5b5035919050565b6000602082840312156111d157600080fd5b81356111dc816110fe565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611235576112356111e3565b60405290565b60006040828403121561124d57600080fd5b6040516040810181811067ffffffffffffffff82111715611270576112706111e3565b604052825161127e816110fe565b8152602083015161128e816110fe565b60208201529392505050565b600082601f8301126112ab57600080fd5b813567ffffffffffffffff808211156112c6576112c66111e3565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561130c5761130c6111e3565b8160405283815286602085880101111561132557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060e0823603121561135757600080fd5b61135f611212565b61136883611123565b8152602083013560208201526040830135604082015261138a60608401611123565b6060820152608083013560808201526113a560a08401611123565b60a082015260c083013567ffffffffffffffff8111156113c457600080fd5b6113d03682860161129a565b60c08301525092915050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b8481528360208201526060604082015260006114456060830184866113dc565b9695505050505050565b60006020828403121561146157600080fd5b815180151581146111dc57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126114a657600080fd5b830160208101925035905067ffffffffffffffff8111156114c657600080fd5b80360382131561107f57600080fd5b60408152600083356114e6816110fe565b73ffffffffffffffffffffffffffffffffffffffff8082166040850152602086013560608501526040860135608085015260608601359150611527826110fe565b80821660a08501525050608084013560c083015261154760a08501611123565b73ffffffffffffffffffffffffffffffffffffffff1660e083015261156f60c0850185611471565b60e0610100850152611586610120850182846113dc565b925050508260208301529392505050565b600073ffffffffffffffffffffffffffffffffffffffff8083511684526020808401518186015260408401516040860152816060850151166060860152608084015160808601528160a08501511660a086015260c0840151915060e060c086015281518060e087015260005b818110156116205783810183015187820161010001528201611603565b5061010092506000838288010152827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116870101935050505092915050565b82815260406020820152600061167c6040830184611597565b949350505050565b6020815260006111dc6020830184611597565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b8085111561171f57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561170557611705611697565b8085161561171257918102915b93841c93908002906116cb565b509250929050565b60008261173657506001610a4f565b8161174357506000610a4f565b816001811461175957600281146117635761177f565b6001915050610a4f565b60ff84111561177457611774611697565b50506001821b610a4f565b5060208310610133831016604e8410600b84101617156117a2575081810a610a4f565b6117ac83836116c6565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156117de576117de611697565b029392505050565b60006111dc8383611727565b81810381811115610a4f57610a4f611697565b80820180821115610a4f57610a4f611697565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008261187d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118b3576118b3611697565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea164736f6c6343000811000a",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "details": "Messages live in an incremental merkle tree (imt) > A Merkle tree is a binary and complete tree decorated with > the Merkle (hash) attribute.",
    "methods": {
      "LOCAL_CHAINID()": {
        "details": "Fetch local chain id.",
        "returns": {
          "chainId": "Local chain id."
        }
      },
      "constructor": {
        "details": "Init code.",
        "params": {
          "config": "User config immutable address.",
          "endpoint": "Endpoint immutable address."
        }
      },
      "imtBranch()": {
        "details": "Fetch the branch of incremental merkle tree."
      },
      "messageCount()": {
        "details": "Fetch the messages count of incremental merkle tree."
      },
      "recvMessage((address,uint256,uint256,address,uint256,address,bytes),bytes,uint256)": {
        "details": "Receive messages.",
        "params": {
          "gasLimit": "The gas limit of message execute.",
          "message": "Received message info.",
          "proof": "Message proof of this message."
        }
      },
      "sendMessage(address,uint256,address,bytes)": {
        "details": "Send message.",
        "params": {
          "encoded": "The calldata which encoded by ABI Encoding.",
          "from": "User application contract address which send the message.",
          "to": "User application contract address which receive the message.",
          "toChainId": "The Message destination chain id."
        }
      }
    },
    "events": {
      "MessageAccepted(bytes32,bytes32,(address,uint256,uint256,address,uint256,address,bytes))": {
        "details": "Notifies an observer that the message has been accepted.",
        "params": {
          "message": "Accepted message info.",
          "msgHash": "Hash of the message.",
          "root": "New incremental merkle tree root after a new message inserted."
        }
      },
      "MessageDispatched(bytes32,bool)": {
        "details": "Notifies an observer that the message has been dispatched.",
        "params": {
          "dispatchResult": "The message dispatch result.",
          "msgHash": "Hash of the message."
        }
      }
    },
    "title": "Channel"
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"config\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"endpoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\",\"indexed\":true},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\",\"indexed\":false},{\"internalType\":\"struct Message\",\"name\":\"message\",\"type\":\"tuple\",\"components\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"indexed\":false}],\"type\":\"event\",\"name\":\"MessageAccepted\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\",\"indexed\":true},{\"internalType\":\"bool\",\"name\":\"dispatchResult\",\"type\":\"bool\",\"indexed\":false}],\"type\":\"event\",\"name\":\"MessageDispatched\",\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"CONFIG\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ENDPOINT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"LOCAL_CHAINID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"dones\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"imtBranch\",\"outputs\":[{\"internalType\":\"bytes32[32]\",\"name\":\"\",\"type\":\"bytes32[32]\"}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"messageCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"struct Message\",\"name\":\"message\",\"type\":\"tuple\",\"components\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}]},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"recvMessage\"},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"root\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"sendMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}]}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"LOCAL_CHAINID()\":{\"details\":\"Fetch local chain id.\",\"returns\":{\"chainId\":\"Local chain id.\"}},\"constructor\":{\"details\":\"Init code.\",\"params\":{\"config\":\"User config immutable address.\",\"endpoint\":\"Endpoint immutable address.\"}},\"imtBranch()\":{\"details\":\"Fetch the branch of incremental merkle tree.\"},\"messageCount()\":{\"details\":\"Fetch the messages count of incremental merkle tree.\"},\"recvMessage((address,uint256,uint256,address,uint256,address,bytes),bytes,uint256)\":{\"details\":\"Receive messages.\",\"params\":{\"gasLimit\":\"The gas limit of message execute.\",\"message\":\"Received message info.\",\"proof\":\"Message proof of this message.\"}},\"sendMessage(address,uint256,address,bytes)\":{\"details\":\"Send message.\",\"params\":{\"encoded\":\"The calldata which encoded by ABI Encoding.\",\"from\":\"User application contract address which send the message.\",\"to\":\"User application contract address which receive the message.\",\"toChainId\":\"The Message destination chain id.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"recvMessage((address,uint256,uint256,address,uint256,address,bytes),bytes,uint256)\":{\"notice\":\"Only message.to's config relayer could relayer this message.\"},\"sendMessage(address,uint256,address,bytes)\":{\"notice\":\"Only endpoint could call this function.\"}},\"version\":1}},\"settings\":{\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"optimizer\":{\"enabled\":true,\"runs\":999999},\"metadata\":{\"bytecodeHash\":\"none\"},\"compilationTarget\":{\"src/Channel.sol\":\"Channel\"},\"libraries\":{}},\"sources\":{\"src/Channel.sol\":{\"keccak256\":\"0x54d4c213849da03f9edc1ac6a8a0004a96166234c2d9e743a833c75de1d66de6\",\"urls\":[\"bzz-raw://e9915ff48449cc3db3be28b3297846c262d3369c6044fa2369ae9925e2a6817f\",\"dweb:/ipfs/QmcKxJaNkeSh9pee52n1McuWGurG7H87oykCpNh4YWUNqF\"],\"license\":\"GPL-3.0\"},\"src/Common.sol\":{\"keccak256\":\"0x51845eaf049a95dd4cf04bd73dd54eea91846c7bed8bc2df033f3b2df08b80ae\",\"urls\":[\"bzz-raw://01ed277b8e829f4c0737415e4089bd8e3f982a8259db3e444284b5f9e34e4fc7\",\"dweb:/ipfs/QmPMjbJVZqZQ76mBU7gUa9ToRs7bw3f8RheVz4qbQSRr1F\"],\"license\":\"GPL-3.0\"},\"src/imt/IncrementalMerkleTree.sol\":{\"keccak256\":\"0x40df52af14b5cf073998953dd58fc58bcd07e7ae7f5bb6b57d116cc8579c2b62\",\"urls\":[\"bzz-raw://47cbd5fb86e9e7121677f2e5ab66bedd1ef2ae8c2d7d347a99a119a76a959749\",\"dweb:/ipfs/QmS2ymLvCCyT3rHAaMk2MKCo68C9AEeziYRCP9FY5izcvc\"],\"license\":\"MIT OR Apache-2.0\"},\"src/interfaces/IEndpoint.sol\":{\"keccak256\":\"0xcda9baebf110e10fab13c4a78afab69c282dd59843755b5e7bbfd470a8b8bcb0\",\"urls\":[\"bzz-raw://b9f0afb0fc55cda8c562d664db9eefe74c2c3b054989558828d548e19846af38\",\"dweb:/ipfs/QmXH7gkAToGZxUsb27iuF2RBZ14gFaneuVum98jw1fcnbR\"],\"license\":\"GPL-3.0\"},\"src/interfaces/IUserConfig.sol\":{\"keccak256\":\"0x8c2bcdcf29f233a2a4a65baafd93e21ede40c69f68b026c3f795bbcfc2775749\",\"urls\":[\"bzz-raw://51d3e03daf98aec664924af419778de3798db8cc8751560bcc0cb78a2393dafe\",\"dweb:/ipfs/QmYrDHuWQy1T7KDrnrhyf84sBCAH23bMgjUP8cCqewMnGe\"],\"license\":\"GPL-3.0\"},\"src/interfaces/IVerifier.sol\":{\"keccak256\":\"0x8fefa9c34511ed47188ad2b9156a5d2a40ad99072dbb61b8bc1f5431aaa2a07d\",\"urls\":[\"bzz-raw://8aced6cea8cefcd161508f6defe0d5baff87af9b9d64be57127a08e629c11556\",\"dweb:/ipfs/QmQr7zMQutShGsqk47jpZYTV7qjGGV9aPzjVkUN9GpS19e\"],\"license\":\"GPL-3.0\"}},\"version\":1}",
  "numDeployments": 1,
  "receipt": {
    "transactionHash": "0x17228f5b52c4ffa02a5645ed7df886dd2225531b6e863a3ece7be8f3a2d7825e",
    "transactionIndex": "0x1",
    "blockHash": "0x5ea517b90785269e0b9e9115391036ad57c499569454be7970a99d1ad329ef57",
    "blockNumber": "0x131014",
    "from": "0x0f14341A7f464320319025540E8Fe48Ad0fe5aec",
    "to": null,
    "cumulativeGasUsed": "0x1c319d",
    "gasUsed": "0x1626f7",
    "contractAddress": "0xbe855598E9b227Fb2fA955DBC857257C1a7c4F45",
    "logs": [],
    "status": "0x1",
    "logsBloom": "0x
    "type": "0x2",
    "effectiveGasPrice": "0x180dd0fc6d6"
  },
  "solcInputHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
  "storageLayout": {
    "storage": [
      {
        "astId": 45476,
        "contract": "src/Channel.sol:Channel",
        "label": "root",
        "offset": 0,
        "slot": "0",
        "type": "t_bytes32"
      },
      {
        "astId": 45480,
        "contract": "src/Channel.sol:Channel",
        "label": "imt",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Tree)46499_storage"
      },
      {
        "astId": 45485,
        "contract": "src/Channel.sol:Channel",
        "label": "dones",
        "offset": 0,
        "slot": "34",
        "type": "t_mapping(t_bytes32,t_bool)"
      }
    ],
    "types": {
      "t_array(t_bytes32)32_storage": {
        "encoding": "inplace",
        "label": "bytes32[32]",
        "numberOfBytes": "1024",
        "base": "t_bytes32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(Tree)46499_storage": {
        "encoding": "inplace",
        "label": "struct IncrementalMerkleTree.Tree",
        "numberOfBytes": "1056",
        "members": [
          {
            "astId": 46496,
            "contract": "src/Channel.sol:Channel",
            "label": "branch",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)32_storage"
          },
          {
            "astId": 46498,
            "contract": "src/Channel.sol:Channel",
            "label": "count",
            "offset": 0,
            "slot": "32",
            "type": "t_uint256"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "transactionHash": "0x17228f5b52c4ffa02a5645ed7df886dd2225531b6e863a3ece7be8f3a2d7825e",
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "recvMessage((address,uint256,uint256,address,uint256,address,bytes),bytes,uint256)": {
        "notice": "Only message.to's config relayer could relayer this message."
      },
      "sendMessage(address,uint256,address,bytes)": {
        "notice": "Only endpoint could call this function."
      }
    },
    "notice": "A channel is a logical connection over cross-chain network. It used for cross-chain message transfer. - Accepts messages to be dispatched to remote chains,   constructs a Merkle tree of the messages. - Dispatches verified messages from source chains."
  }
}
